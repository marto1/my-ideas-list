* Take a snippet from a video
ffmpeg  -ss 00:11:07 -i <url> -t 00:00:20 -async 1 -strict -2 <target>
* loseless screen grab, conv after
ffmpeg -f alsa -ac 2 -i pulse -f x11grab -r 30 -s 1366x768 -i :0.0 -qscale 0.0001 -vcodec huffyuv -acodec libmp3lame grab.avi
ffmpeg -i grab.avi output.webm
* lossy screen grab
ffmpeg -f alsa -ac 2 -i pulse -f x11grab -r 30 -s 1366x768 -i :0.0 -threads 4 -y 1.webm
* python wheel build/register/upload chain
python setup.py bdist_wheel --universal
twine register dist/*
twine upload dist/*
* convert list of timestamps to dates
grep -F 'quit' bla.txt | cut -f2 -d" " > new.txt #list of timestamps
while read in; do date -d @"$in"; done < new.txt

* uncompress .xz files
unxz

* reboot every 5th minute

*/5 * * * * sudo /sbin/reboot

* Get Xorg version

X -version

* Get software version package - ubuntu

sudo apt-cache show libc6

* fglrx dependencies

debhelper dh-modaliases execstack dpkg-dev dpkg-dev dkms xserver-xorg-dev (only 64 bit - lib32gcc1)
* tar compress directory
tar -zcvf archive-name.tar.gz directory-name

* ftp upload(from secure mobile)
ftp -inv IP <<EOF
user USR PASS
binary
cd directory
append local-name remote-name
bye
EOF

* Change gateway over ssh
route -n
route del default && route add default gw IP ppp0 #DANGEROUS 
* ISO 8601 format date
date --iso-8601
* CHECK TCP connection to address
import socket
TCP_IP = IP
TCP_PORT = port
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((TCP_IP, TCP_PORT))
s.close()

* Resolve DNS python
import socket
data = socket.gethostbyname_ex("google.com")
print data
* Default language env variable

LANG=C -> default language

* manipulating structured text data
https://github.com/dbohdan/structured-text-tools
* better code   
  source control?
  build in one step?
  daily builds?
  bug database?
  fix bugs before writing new code?
  up-to-date schedule?
  spec?
  quiet working conditions?
  use the best tools money can buy?
  have testers?
  hallway usability testing?
* emacs - replace on yank
(delete-selection-mode 1)
* emacs - clear kill ring
(setq kill-ring nil)
* python - encode/decode b64
from base64 import b64encode, b64decode
b64encode(s[, altchars])
b64decode(s[, altchars])
* python utf8
# -*- coding: utf-8 -*-
* rpi get temperature sensor
cd /opt/vc/bin
LD_LIBRARY_PATH=/opt/vc/lib ./vcgencmd measure_temp 
* show duplicates in first column 
awk '{print $1}' hashes.log | sort | uniq -cd
* disable camera
sudo modprobe -r uvcvideo
* get a list of offending ECDSA keys from a file 
grep "remove with" report.log | ruby -F"with:" -ane  'puts $F' | grep ssh-keygen
