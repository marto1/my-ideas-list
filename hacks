* Take a snippet from a video
ffmpeg  -ss 00:11:07 -i <url> -t 00:00:20 -async 1 -strict -2 <target>
* loseless screen grab, conv after
ffmpeg -f alsa -ac 2 -i pulse -f x11grab -r 30 -s 1366x768 -i :0.0 -qscale 0.0001 -vcodec huffyuv -acodec libmp3lame grab.avi
ffmpeg -i grab.avi output.webm
* lossy screen grab
ffmpeg -f alsa -ac 2 -i pulse -f x11grab -r 30 -s 1366x768 -i :0.0 -threads 4 -y 1.webm
* python wheel build/register/upload chain
python setup.py bdist_wheel --universal
twine register dist/*
twine upload dist/*
* convert list of timestamps to dates
grep -F 'quit' bla.txt | cut -f2 -d" " > new.txt #list of timestamps
while read in; do date -d @"$in"; done < new.txt

* uncompress .xz files
unxz

* reboot every 5th minute

*/5 * * * * sudo /sbin/reboot

* Get Xorg version

X -version

* Get software version package - ubuntu

sudo apt-cache show libc6

* fglrx dependencies

debhelper dh-modaliases execstack dpkg-dev dpkg-dev dkms xserver-xorg-dev (only 64 bit - lib32gcc1)
* tar compress directory
tar -zcvf archive-name.tar.gz directory-name

* ftp upload(from secure mobile)
ftp -inv IP <<EOF
user USR PASS
binary
cd directory
append local-name remote-name
bye
EOF

* Change gateway over ssh
route -n
route del default && route add default gw IP ppp0 #DANGEROUS 
* ISO 8601 format date
date --iso-8601
* CHECK TCP connection to address
import socket
TCP_IP = IP
TCP_PORT = port
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((TCP_IP, TCP_PORT))
s.close()

* Resolve DNS python
import socket
data = socket.gethostbyname_ex("google.com")
print data
* Default language env variable

LANG=C -> default language

* manipulating structured text data
https://github.com/dbohdan/structured-text-tools
* emacs - replace on yank
(delete-selection-mode 1)
* emacs - clear kill ring
(setq kill-ring nil)
* python - encode/decode b64
from base64 import b64encode, b64decode
b64encode(s[, altchars])
b64decode(s[, altchars])
* python utf8
# -*- coding: utf-8 -*-
* rpi get temperature sensor
cd /opt/vc/bin
LD_LIBRARY_PATH=/opt/vc/lib ./vcgencmd measure_temp 
* show duplicates in first column 
awk '{print $1}' hashes.log | sort | uniq -cd
* disable camera
sudo modprobe -r uvcvideo
* get a list of offending ECDSA keys from a file 
grep "remove with" report.log | ruby -F"with:" -ane  'puts $F' | grep ssh-keygen
* replace each letter with a symbol in regex
\w -> .
replaces all letters with dots
* remove lines from one file which are in another
grep -F -v -x -f uhashes.log hashes.log | wc -l
* Get not-installed-package deb links
sudo apt-get install --yes --no-download --reinstall --print-uris xdotool

out:
'http://ports.ubuntu.com/pool/universe/x/xdotool/libxdo3_3.20130111.1-3.1_armhf.deb' libxdo3_1%3a3.20130111.1-3.1_armhf.deb 17644 MD5Sum:10057d4dbbdcee72f32bbc109ff9863d
'http://ports.ubuntu.com/pool/universe/x/xdotool/xdotool_3.20130111.1-3.1_armhf.deb' xdotool_1%3a3.20130111.1-3.1_armhf.deb 35606 MD5Sum:a84b1b4530df83adfe0a7ca594533fe0

* compress .xz files
xz -k -9 <file>

* launch xterm with geometry
DISPLAY=:0.0 xterm -geometry 80x24+10+10
* test VW
 DISPLAY=:0.0 glxgears -fullscreen
* arandr remote
ssh -X blabla
arandr --randr-display :0.0
* configure for 32 bit on 64 bit host
  ./configure --build=i686-pc-linux-gnu "CFLAGS=-m32" "CXXFLAGS=-m32" "LDFLAGS=-m32"
* manually set window to a resolution
DISPLAY=:0.0 wmctrl -r chrome -b toggle,fullscreen
DISPLAY=:0.0 wmctrl -r chrome -e 0,0,0,1080,3840
* i3 wm send restart/any config command
DISPLAY=:0 i3-msg restart
* i3 reload with debug
DISPLAY=:0 i3-msg 'debuglog on; shmlog on; reload'
* i3 exit fullscreen mode by default
Alt+f
* xrandr check
DISPLAY=:0.0 xrandr -q
* qemu load i386 raw image
qemu-system-i386 -net nic,model=rtl8139 -net user -m 512M -boot order=d -drive file=NAME.img,format=raw
* create empty image
fallocate -l 1G test.img
* Show top five CPU consuming processes
ps aux | sort -rk 3,3 | head -n 6
* exclude grepping self from ps au
xps aux | grep "[f]nord"
* List package dependencies
apt-cache depends python
* SOCKS proxy using tunnel
ssh -N -D 2001 -p port username@servername
* tar.gz folder
tar -zcvf archive-name.tar.gz directory-name
* Virtual monitor/server
apt-get install xvfb
Xvfb -shmem -screen 0 1280x1024x24
DISPLAY=:0 xdpyinfo
^verify
* Diff two directories recursively
diff -rq dir1 dir2
* See all userland processes
 ps a --ppid 2 -p 2 --deselect
* scan for wifi networks
sudo iwlist wlan0 scan
* chrome task manager
shift+enter
* print last line
tail -1
* cut by tab
cut -d'       ' -f 1
* remove leftover packages
tar -zcvf archive-name.tar.gz directory-name
* Diff two directories recursively
diff -rq dir1 dir2

* See all userland processes
 ps a --ppid 2 -p 2 --deselect
* scan for wifi networks
sudo iwlist wlan0 scan
* chrome task manager
shift+enter
* print last line
tail -1
* cut by tab
cut -d'       ' -f 1
* remove leftover packages
sudo apt-get remove --purge $(sudo dpkg -l | grep "^rc" | awk '{print $2}' | tr '\n' ' ')
* start without a cursor
startx -- -nocursor
* change layout
DISPLAY=:0.0 setxkbmap -layout dk
* change layout on tty
sudo loadkeys dk
* test sound over HDMI
speaker-test -c 2 -r 48000 -D hw:0,3
* logrotate manually
logrotate -d [your_config_file]
* nmap scan LAN for mac addresses
nmap -sP 192.168.0.*
* add key to apt
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3C962022012520A0
* untar tar.gz
tar -xzf file
* delete duplicate files
fdupes -dN .
* tar directory
tar -czvf my_directory.tar.gz -C my_directory .
* shuffle list
import random
s = range(5)
random.shuffle(s)
* get modules from python files 
grep -h "import " *.py | unexpand |  sed 's/import//' | sed 's/from.*//' | tr -d " " | sort | uniq
* checksum recursively
find / -type f -print0 | xargs -0 md5sum > /checksums_backup.md5
* read/write dstructive test
badblocks -wsv /dev/sdd
* firefox "cannot read profile" fix
sudo chown -R user:user .cache/mozilla/
* upgrade ubuntu system
apt-get install update-manager-core
do-release-upgrade

conf: /etc/update-manager/release-upgrades
* get UUID of ext filesystem
blkid /dev/sda1
* stop dmesg spilling in console
sudo dmesg -n 1
* get BIOS version
cat /sys/class/dmi/id/bios_version
* stop process
kill -SIGSTOP
* Show fps counter chromium
  --show-fps-counter
* extract package from system
dpkg-repack
* sbcl disable debugger from inside
(defun debug-ignore (c h) (declare (ignore h)) (print c) (abort))
(setf *debugger-hook* #'debug-ignore)
* execute sexp in emacs
go to end of sexp and hit C-x C-e
* elisp insert some formatted text in a loop 
(loop for key from 0 below 10
      do (insert (format "bakabaka %d desu \n" key)))

* execute program with gdb, go to start, step opcode by opcode 
use: https://github.com/cyrus-and/gdb-dashboard
gdb <program>

break _start
run
si

* scan gmail for free stuff
giveaway category:promotions
free category:promotions
* list apt manifest 
apt list --installed
* copy filesystem from place to place
rsync -avxHAX --progress / /new-disk/
* show to which package a file belongs to
dpkg -S /bin/ls
* search repos for file and package it belongs to
apt-file update
apt-file find htop
* good optimization flags for x86_64
-m64 -O3 -fomit-frame-pointer -funroll-loops -fomit-frame-pointer
-march=native -mtune=native

* running 64 bit UEFI qemu with OVMF and ssh port forwarded
qemu-system-x86_64 -L . -m 1024 -hda /dev/sdb -localtime \
-net nic,model=rtl8139 \
-net user,id=mynet0,net=192.168.76.0/24,dhcpstart=192.168.76.9,hostfwd=tcp::60022-:22 \
-soundhw ac97 -usb -usbdevice tablet
